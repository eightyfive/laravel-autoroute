openapi: 3.0.0
info:
  title: Autoroute
  version: 0.1.0

security:
  - auth: ["sanctum"]

paths:
  /login:
    post:
      operationId: SessionController@login
      security: []
      responses:
        "200":
          $ref: "#/components/responses/204"

  /users:
    get:
      operationId: Users::listByRoute
      security: []
      responses:
        "200":
          $ref: "#/components/responses/users"
    post:
      operationId: Users::createByRoute
      security: []
      requestBody:
        $ref: "#/components/requestBodies/register"
      responses:
        "201":
          $ref: "#/components/responses/204"

  /users/{user_id}:
    parameters:
      - $ref: "#/components/parameters/user_id"
    get:
      operationId: Users::readByRoute
      security: []
      responses:
        "200":
          $ref: "#/components/responses/user"
    put:
      operationId: Users::updateByRoute
      security: []
      requestBody:
        $ref: "#/components/requestBodies/user"
      responses:
        "200":
          $ref: "#/components/responses/204"

  /users/{user_id}/posts:
    parameters:
      - $ref: "#/components/parameters/user_id"
    get:
      operationId: Posts::getByRoute
      security:
        - auth: ["sanctum"]
        - can: ["listUser", "App\\Models\\Post", "user_id"]
      responses:
        "200":
          $ref: "#/components/responses/posts"
    post:
      operationId: Posts::createByRoute
      security:
        - auth: ["sanctum"]
        - can: ["createUser", "App\\Models\\Post", "user_id"]
      requestBody:
        $ref: "#/components/requestBodies/post"
      responses:
        "201":
          $ref: "#/components/responses/post"

  /users/{user_id}/posts/{post_id}:
    parameters:
      - $ref: "#/components/parameters/user_id"
      - $ref: "#/components/parameters/post_id"
    get:
      operationId: Posts::findByRoute
      security:
        - auth: ["sanctum"]
        - can: ["readUser", "post_id", "user_id"]
      responses:
        "200":
          $ref: "#/components/responses/post"
    put:
      operationId: Posts::updateByRoute
      requestBody:
        $ref: "#/components/requestBodies/post"
      responses:
        "200":
          $ref: "#/components/responses/post"
    delete:
      operationId: Posts::deleteByRoute
      security:
        - auth: ["sanctum"]
        - can: ["deleteUser", "post_id", "user_id"]
      responses:
        "204":
          $ref: "#/components/responses/204"

components:
  parameters:
    user_id:
      in: path
      name: user_id
      schema:
        type: integer
      required: true
      description: User ID
    post_id:
      in: path
      name: post_id
      schema:
        type: integer
      required: true
      description: Post ID

  schemas:
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
    Post:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string

  requestBodies:
    register:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - email
              - password
            properties:
              name:
                type: string
              email:
                type: string
                format: email
              password:
                type: string
                format: min:8
              device_name:
                type: string
                format: "between:5,10"
    user:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
    post:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - title
            properties:
              title:
                type: string
                format: min:3

  responses:
    users:
      description: Success
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
    user:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    posts:
      description: Success
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Post"
    post:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Post"
    "401":
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    "204":
      description: No Content

  securitySchemes:
    auth:
      type: http
      scheme: bearer
